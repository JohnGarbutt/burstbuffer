// Code generated by MockGen. DO NOT EDIT.
// Source: internal/pkg/v2/registry/pool.go

// Package mock_registry is a generated GoMock package.
package mock_registry

import (
	datamodel "github.com/RSE-Cambridge/data-acc/internal/pkg/v2/datamodel"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockPoolRegistry is a mock of PoolRegistry interface
type MockPoolRegistry struct {
	ctrl     *gomock.Controller
	recorder *MockPoolRegistryMockRecorder
}

// MockPoolRegistryMockRecorder is the mock recorder for MockPoolRegistry
type MockPoolRegistryMockRecorder struct {
	mock *MockPoolRegistry
}

// NewMockPoolRegistry creates a new mock instance
func NewMockPoolRegistry(ctrl *gomock.Controller) *MockPoolRegistry {
	mock := &MockPoolRegistry{ctrl: ctrl}
	mock.recorder = &MockPoolRegistryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPoolRegistry) EXPECT() *MockPoolRegistryMockRecorder {
	return m.recorder
}

// GetPool mocks base method
func (m *MockPoolRegistry) GetPool(name datamodel.PoolName) (datamodel.Pool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPool", name)
	ret0, _ := ret[0].(datamodel.Pool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPool indicates an expected call of GetPool
func (mr *MockPoolRegistryMockRecorder) GetPool(name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPool", reflect.TypeOf((*MockPoolRegistry)(nil).GetPool), name)
}

// EnsurePoolCreated mocks base method
func (m *MockPoolRegistry) EnsurePoolCreated(poolName datamodel.PoolName, granularityGB int) (datamodel.Pool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EnsurePoolCreated", poolName, granularityGB)
	ret0, _ := ret[0].(datamodel.Pool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// EnsurePoolCreated indicates an expected call of EnsurePoolCreated
func (mr *MockPoolRegistryMockRecorder) EnsurePoolCreated(poolName, granularityGB interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EnsurePoolCreated", reflect.TypeOf((*MockPoolRegistry)(nil).EnsurePoolCreated), poolName, granularityGB)
}
