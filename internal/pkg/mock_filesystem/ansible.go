// Code generated by MockGen. DO NOT EDIT.
// Source: internal/pkg/filesystem/ansible.go

// Package mock_filesystem is a generated GoMock package.
package mock_filesystem

import (
	datamodel "github.com/RSE-Cambridge/data-acc/internal/pkg/datamodel"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockAnsible is a mock of Ansible interface
type MockAnsible struct {
	ctrl     *gomock.Controller
	recorder *MockAnsibleMockRecorder
}

// MockAnsibleMockRecorder is the mock recorder for MockAnsible
type MockAnsibleMockRecorder struct {
	mock *MockAnsible
}

// NewMockAnsible creates a new mock instance
func NewMockAnsible(ctrl *gomock.Controller) *MockAnsible {
	mock := &MockAnsible{ctrl: ctrl}
	mock.recorder = &MockAnsibleMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAnsible) EXPECT() *MockAnsibleMockRecorder {
	return m.recorder
}

// CreateEnvironment mocks base method
func (m *MockAnsible) CreateEnvironment(session datamodel.Session) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateEnvironment", session)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateEnvironment indicates an expected call of CreateEnvironment
func (mr *MockAnsibleMockRecorder) CreateEnvironment(session interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateEnvironment", reflect.TypeOf((*MockAnsible)(nil).CreateEnvironment), session)
}
