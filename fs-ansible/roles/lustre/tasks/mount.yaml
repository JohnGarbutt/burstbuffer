---
- set_fact:
    mdts: "{{ mdts | default({}) }}"
    osts: "{{ osts | default({}) }}"
  tags: [ 'never', 'start_mgs', 'start_mdts', 'start_osts', 'create_mgs', 'create_mdt', 'create_osts', 'stop_all', 'client_mount','client_unmount', 'stop_mgs']

- name: load lustre module
  command: modprobe -v lustre
  tags: [ 'never', 'start_lustre', 'mount']

# Using ordering specified in here:
# http://wiki.lustre.org/Starting_and_Stopping_Lustre_Services

- name: Start MGS
  block:
    - name: Create MGS mount dir
      file:
        path: /lustre/MGS
        state: directory
        recurse: yes

    - name: mount MGSs
      command: mount -t lustre /dev/{{ mgs | default("mgs") }} /lustre/MGS
      register: command_result
      failed_when: "command_result.rc != 0 and ('is already mounted' not in command_result.stderr)"
      changed_when: "command_result.rc == 0"
  when:
    - mgs is defined

- name: Enable multiple mdt target support (DNE2)
  block:
    - name: Enable DNE2 remote dir
      command: "lctl set_param mdt.*.enable_remote_dir=1"
      register: command_result
      failed_when: "command_result.rc != 0 and ('lctl' not in command_result.stderr)"

    - name: Enable DNE2 all users
      command: "lctl set_param mdt.*.enable_remote_dir_gid=-1"
  when:
    - mgs is defined

- name: Start MDTs
  block:
    - name: Create MDT mount dir
      file:
        path: /lustre/{{ fs_name }}/MDT/{{ item }}
        state: directory
        recurse: yes
      with_items: "{{ mdts.keys() | list }}"

    - name: mount MDTs
      command: mount -t lustre /dev/{{ item }}p1 /lustre/{{ fs_name }}/MDT/{{ item }}
      register: command_result
      failed_when: "command_result.rc != 0 and ('is already mounted' not in command_result.stderr)"
      changed_when: "command_result.rc == 0"
      with_items: "{{ mdts.keys() | list }}"

- name: Start OSTs
  block:
    - name: Create OST mount dir
      file:
        path: /lustre/{{ fs_name }}/OST/{{ item }}
        state: directory
        recurse: yes
      with_items: "{{ osts.keys() | list }}"

    - name: mount OSTs
      command: mount -t lustre /dev/{{ item }}p2 /lustre/{{ fs_name }}/OST/{{ item }}
      register: command_result
      failed_when: "command_result.rc != 0 and ('is already mounted' not in command_result.stderr)"
      changed_when: "command_result.rc == 0"
      with_items: "{{ osts.keys() | list }}"